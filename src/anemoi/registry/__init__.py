# (C) Copyright 2024 Anemoi contributors.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
#
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.

# ruff: noqa: E402

import logging
import os

LOG = logging.getLogger(__name__)


def _get_config_from_server():
    from anemoi.utils.config import load_config

    from anemoi.registry.rest import Rest

    # config from this anemoi-registry package
    config = _get_config_from_package()

    # overwritten by config from user
    config = load_config(secrets=["api_token"], defaults=config)["registry"]

    # use it to get the settings from the server
    if "api_token" not in config:
        raise ValueError("Missing api_token in config")
    token = config["api_token"]
    url = config["settings"]
    LOG.debug(f"Using settings from URL: {url}")
    print(f"Using settings from URL: {url}")

    rest = Rest(token=token)
    return rest.get_url(url)


def _get_config_from_package():
    from anemoi.utils.config import load_any_dict_format

    path = os.path.join(os.path.dirname(__file__), "config.yaml")
    return load_any_dict_format(path)


global CONFIG
CONFIG = None


def config():
    global CONFIG
    if CONFIG:
        return CONFIG

    from anemoi.utils.config import load_config

    # config from this anemoi-registry package
    cfg = _get_config_from_package()

    # overwritten by config from server
    cfg.update(_get_config_from_server())

    # overwritten by config from user
    cfg = load_config(secrets=["api_token"], defaults=cfg)

    CONFIG = cfg.get("registry")
    return config()


def publish_dataset(*args, **kwargs):
    return Dataset.publish(*args, **kwargs)


from .entry.dataset import DatasetCatalogueEntry as Dataset
from .entry.dataset import DatasetCatalogueEntryList as DatasetsList
from .entry.experiment import ExperimentCatalogueEntry as Experiment
from .entry.experiment import ExperimentCatalogueEntryList as ExperimentsList
from .entry.weights import WeightCatalogueEntry as Weights
from .entry.weights import WeightsCatalogueEntryList as WeightsList
from .tasks import TaskCatalogueEntry as Task
from .tasks import TaskCatalogueEntryList as TasksList

try:
    # NOTE: the `_version.py` file must not be present in the git repository
    #   as it is generated by setuptools at install time
    from ._version import __version__  # type: ignore
except ImportError:  # pragma: no cover
    # Local copy or not installed with setuptools
    __version__ = "999"


__all__ = [
    "Weights",
    "WeightsList",
    "Experiment",
    "ExperimentsList",
    "Dataset",
    "DatasetsList",
    "Task",
    "TasksList",
]
